using System;
using System.Data;
using System.Linq;
using System.Windows;
using System.Windows.Data;
using System.Windows.Controls;
using System.Collections.Generic;
using System.Windows.Media.Imaging;

using static Additional.DBController;

namespace Course_work
{
    public partial class MainWindow : System.Windows.Window
    {
        partial void CountriesInit()
        {
            CountriesPage.IsVisibleChanged += (s, e) =>
            {
                if ((bool)e.NewValue)
                {
                    LoadCountries();
                    LoadBlockedCountries();
                }
                else
                {
                    CountiesTable.Columns.Clear();
                    BlockedCountriesTable.Columns.Clear();
                    GC.Collect();
                }
            };
            CountriesReturnButton.Click += (s, e) => Return();

            #region Countries table events
            //Edit
            CountiesTable.RowEditEnding += 
                (s, e) =>
                {
                    MessageBox.Show("Edited");
                };
            //Selection
            CountiesTable.SelectionChanged += 
                (s, e) =>
                {
                    if (e.AddedItems.Count == 0)
                    {
                        ChangeBCState(blockedCountries, false);
                    }
                    else
                    {
                        BlockedCountriesTable.CanUserAddRows = true;

                        var row = ((Object[])e.AddedItems).Cast<DataRowView>().First();

                        DataTable table = new DataTable();
                        table.Columns.Add("DateFrom");
                        table.Columns.Add("DateTo");
                        table.Columns.Add("CountryId");

                        foreach (var item in blockedCountries.AsEnumerable().Where(t => (int)row["CountryId"] == (int)t["CountryId"]))
                        {
                            table.ImportRow(item);
                        }

                        ChangeBCState(table, true);
                    }
                };
            //loading
            CountiesTable.LoadingRow += 
                (s, e) =>
                {
                    DataRowView row = e?.Row?.Item as DataRowView;

                    if (row != null)
                    {
                        row.Row["BitmapFrame"] = Additional.DataConverter.GetImageFromByteArray((byte[])GetObject($"SELECT Image FROM [dbo].[Country] WHERE CountryId = {row.Row["CountryId"]}"));
                    }
                };
            //unloading
            CountiesTable.UnloadingRow += 
                (s, e) =>
                {
                    DataRowView row = e?.Row?.Item as DataRowView;
                    if (row != null)
                        row.Row["BitmapFrame"] = null;
                    GC.Collect();
                };
            //Columns generating
            CountiesTable.AutoGeneratedColumns += 
                (s, e) =>
                {
                    var columns = CountiesTable.Columns;
                    columns[0].Header = "Id";
                    columns[0].Width = new DataGridLength(1, DataGridLengthUnitType.Auto);
                    columns[1].Header = "Назва";
                    columns[1].Width = 150;
                    columns[2].Header = "У використанні";
                    columns[2].Width = new DataGridLength(1, DataGridLengthUnitType.Auto);
                    columns[3].Header = "Флаг";
                    columns[3].Width = 60;
                };
            //Column generated
            CountiesTable.AutoGeneratingColumn +=
                (s, e) =>
                {
                    if ((string)e.Column.Header == "BitmapFrame")
                    {
                        FrameworkElementFactory image = new FrameworkElementFactory(typeof(Image));
                        DataTemplate cellTemplate = new DataTemplate();
                                     cellTemplate.VisualTree = image;
                        Binding binding = new Binding("BitmapFrame");
                                binding.Mode = BindingMode.TwoWay;
                                image.SetValue(Image.SourceProperty, binding);
                        DataGridTemplateColumn templateColumn = new DataGridTemplateColumn();
                                               templateColumn.Header = "BitmapFrame";
                                               templateColumn.CellTemplate = cellTemplate;
                       e.Column = templateColumn;
                    }
                };
            //Buttons
            CountiesTable.PreviewKeyDown +=
                (s, e) =>
                {
                    if (e.Key == System.Windows.Input.Key.Escape)
                    {
                        ((DataGrid)s).SelectedItem = null;
                    }
                };
            #endregion

            #region Blocked countries events
            //Init new Item
            BlockedCountriesTable.InitializingNewItem += 
                (s, e) =>
                {
                    if (CountiesTable.SelectedItem.GetType() == typeof(DataRowView))
                    {
                        var row = ((DataRowView)e.NewItem).Row;
                        row[0] = ((DataRowView)CountiesTable.SelectedItem)["CountryId"];
                        var d = ((DatePicker)row[1]).SelectedDate;
                    }
                };
            //Edit
            BlockedCountriesTable.RowEditEnding +=
                (s, e) =>
                {
                    MessageBox.Show("Edited");
                };
            //Deleting
            BlockedCountriesTable.PreviewKeyDown += 
                (s, e) =>
                {
                    if (e.Key == System.Windows.Input.Key.Delete)
                    {
                        MessageBox.Show("Deleted");
                    }
                };
            //Generated
            BlockedCountriesTable.AutoGeneratedColumns +=
                (s, e) =>
                {
                    var columns = BlockedCountriesTable.Columns;
                    columns[2].Header = "Id";

                    columns[2].Width = new DataGridLength(1, DataGridLengthUnitType.Auto);

                    columns[2].IsReadOnly = true;
                };
            #endregion
            //Generating
            BlockedCountriesTable.AutoGeneratingColumn +=
                (s, e) =>
                {
                    if ((string)e.Column.Header == "DateFrom" || (string)e.Column.Header == "DateTo")
                    {
                        Binding templateColumnBinding = new Binding((string)e.Column.Header);
                                templateColumnBinding.UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged;
                                templateColumnBinding.Mode = BindingMode.TwoWay;
                        FrameworkElementFactory datePickerFactoryElem = new FrameworkElementFactory(typeof(DatePicker));
                                                datePickerFactoryElem.SetValue(DatePicker.SelectedDateProperty, templateColumnBinding);
                                                datePickerFactoryElem.SetValue(DatePicker.DisplayDateProperty, templateColumnBinding);
                        DataTemplate cellTemplate = new DataTemplate();
                                     cellTemplate.VisualTree = datePickerFactoryElem;
                        DataGridTemplateColumn templateColumn = new DataGridTemplateColumn();
                                               templateColumn.Header = (string)e.Column.Header;
                                               templateColumn.CellTemplate = cellTemplate;
                        e.Column = templateColumn;
                    }
                };
        }

        public void LoadCountries()
        {
            DataTable table = GetTable("SELECT CountryId, NameUa, InUse FROM [dbo].[Country] ORDER BY 2");
            table.Columns.Add("BitmapFrame", typeof(BitmapFrame));
            
            CountiesTable.ItemsSource = table.DefaultView;

            CountiesTable.AutoGenerateColumns = true;
            CountiesTable.CanUserResizeColumns = false;
            CountiesTable.CanUserDeleteRows = false;  
        }

        DataTable blockedCountries;
        public void LoadBlockedCountries()
        {
            blockedCountries = GetTable("SELECT * FROM [dbo].[InaccessibleCountries] ORDER BY 3");

            ChangeBCState(blockedCountries, false);

            BlockedCountriesTable.AutoGenerateColumns = true;
            BlockedCountriesTable.CanUserResizeColumns = false;
        }

        public void ChangeBCState(DataTable table, bool addrows)
        {
            BlockedCountriesTable.Columns.Clear();
            BlockedCountriesTable.ItemsSource = table.DefaultView;

            BlockedCountriesTable.CanUserAddRows = addrows;
        }
    }
}
