using System;
using System.Data;
using System.Linq;
using System.Windows;
using System.Windows.Data;
using System.Windows.Controls;
using System.Collections.Generic;
using System.Windows.Media.Imaging;

using static CourseWork.DBController;

namespace CourseWork.Pages.UserPart
{
    public partial class ApplymentOnTourPage : Page
    {
        readonly int client, tour;
        public ApplymentOnTourPage(int client, int tour)
        {
            this.client = client;
            this.tour = tour;
            InitializeComponent();
            LoadServices();
        }

        public void LoadAccomodation()
        {
            DataTable table = GetTable($"SELECT FROM [dbo].[RouteAccomodation] as ra " +
                                       $"JOIN [dbo].[Tour] as t ON r.RouteId = ra.RouteId " +
                                       $"WHERE t.TourId = {tour}");
            AccomodationTable.ItemsSource = table.DefaultView;
        }

        public void LoadServices()
        {
            DataTable table = GetTable($"SELECT rs.RSId, at.Type, rs.Name, rs.Price, rs.Comment FROM [dbo].[RouteService] as rs JOIN Tour as t ON t.RouteId = rs.RouteId JOIN AdditionalType as at ON at.AddTypeId = rs.AddTypeId WHERE t.TourId = {tour}");

            ServicesTable.IsReadOnly = true;
            ServicesTable.AutoGeneratedColumns += (s, e) => Additionals.ContolsSettings.ColumnsNaming(s, e, "", "Тип", "Назва", "Ціна", "Опис");
            ServicesTable.AutoGeneratingColumn +=
                (s, e) =>
                {
                    if((string)e.Column.Header == "RSId")
                    {
                        DataGridTemplateColumn buttonColumn = new DataGridTemplateColumn();
                        DataTemplate buttonTemplate = new DataTemplate();
                        FrameworkElementFactory buttonFactory = new FrameworkElementFactory(typeof(Button));
                        buttonTemplate.VisualTree = buttonFactory;
                        buttonFactory.AddHandler(Button.ClickEvent, new RoutedEventHandler(AddService));
                        buttonFactory.SetValue(ContentProperty, "Додати");
                        buttonColumn.CellTemplate = buttonTemplate;
                        e.Column = buttonColumn;
                    }
                    if((string)e.Column.Header == "Comment" || (string)e.Column.Header == "Name")
                    {
                        Additionals.ContolsSettings.AddWrap(e.Column as DataGridTextColumn);
                        if ((string)e.Column.Header == "Comment")
                            e.Column.Width = 300;
                        else
                            e.Column.Width = 100;
                    }
                };

            ServicesTable.ItemsSource = table.DefaultView;
            ServicesTable.RowHeight = 40;
        }

        List<int> services = new List<int>();
        private void AddService(object sender, RoutedEventArgs e)
        {
            var btn = sender as Button;
            bool status = (string)btn.Content == "Додати";
            btn.Content = status ? "Видалити" : "Додати";
            if (status)
            {
                services.Add((int)(btn.DataContext as DataRowView).Row[0]);
            }
            else
            {
                services.Remove((int)(btn.DataContext as DataRowView).Row[0]);
            }
            MessageBox.Show(status ? "Added" : "Removed");
        }

        private void ApplyToTourClick(object sender, RoutedEventArgs e)
        {
            MessageBox.Show("Success\n" + string.Join(", ", services));
            MainWindow.WindowFrame.NavigationService.RemoveBackEntry();
            MainWindow.WindowFrame.GoBack();
        }
    }
}
